"""
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
"""

import time

start = time.time()

def solve_it(limit):
	fib = fibs(limit) # generate Fibonacci numbers less whose values do not exceed limit
	return sum(even_fibs(fib))

def fibs(limit):
	fib = [1,1]

	while fib[-1] < limit:
		added = fib[-1] + fib[-2]
		fib.append(added)
	del fib[-1]
	return fib

def even_fibs(fibs):
	even_fib = []
	for n in fibs:
		if n%2 == 0:
			even_fib.append(n)
	return even_fib
		
print solve_it(4000000)

print "It took", time.time() - start, "seconds."