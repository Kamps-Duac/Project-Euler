<?php

//Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
//
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

namespace Euler;

require_once '../vendor/autoload.php';

class FibSum
{
    public function makeFibArray()
    {
        $fibArray = array(1, 2);
        while (end($fibArray) < 4000000) {
            $fibArray[] = $fibArray[count($fibArray) - 1] + $fibArray[count($fibArray) - 2];
        }
        return $fibArray;
    }

    public function getEvens($fibs)
    {
        $evens = array();
        foreach ($fibs as $f) {
            if ($f % 2 == 0) {
                $evens[] = $f;
            }
        }
        return $evens;
    }

    public function solveIt()
    {
        $fibArray = $this->makeFibArray();
        $evenFibs = $this->getEvens($fibArray);
        return array_sum($evenFibs);
    }
}